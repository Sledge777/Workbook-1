Вторая книга:
ПРОЕКТИРОВАНИЕ
ИНФОРМАЦИОННЫХ СИСТЕМ


Основные понятия и классификация информационных систем
1.1 Основные понятия
Целью изучения дисциплины является освоение технологий проектирования информационных систем (ИС), базирующееся на знаниях и умениях в
области вычислительной техники и методов программирования, теории информационных систем и теории надежности, управления и представления
данных, методов и средств обеспечения данных.
В результате изучения дисциплины каждый студент должен:
1) получить знания об этапах проектирования ИС, их содержании;
2) изучить нормативные документы, на которых базируется процесс проектирования ИС;
3) научиться принимать решения о целесообразности создания ИС;
4) научиться формировать требования к ИС;
5) изучить принципы структурного и объектно-ориентированного подхода
к проектированию ИС;
6) получить представления об инструментальных средствах, используемых при проектировании ИС.
Знание дисциплины начинается со знания основных терминологий, используемых в рамках данной предметной области. Самый основополагающий
термин – это информация.
Информация - сведения о тех или иных предметах, явлениях, процессах, событиях.
В процессе своей жизнедеятельности мы постоянно участвуем в информационных процессах, непосредственно связанных с информацией.
Информационные процессы - процессы сбора, обработки, накопления,
хранения, поиска и распространения информации.
В данном аспекте большое значение приобретает понятие документированной информации или документа. В большинстве случаев информация
предоставляется в виде документа – зафиксированной на материальном носителе информации с реквизитами, позволяющими ее идентифицировать (исключая случаи, когда информация поступает не в виде документа, а в виде
каких-либо физических величин).
Информация не только существует, но и обрабатывается.
Информационные технологии - совокупность методов и способов, позволяющих обрабатывать информацию, в том числе с использованием аппаратных и программных средств.


Информационный ресурс – это отдельный документ или массив документов в информационной системе.
Информационная система – организационно упорядоченная совокупность документов (их массивов) и информационных технологий, в том числе
с использованием средств вычислительной техники и связи, реализующих
информационные процессы.

Автоматизированная информационная система (АИС) – информационная система, в которой представление, хранение и обработка информации
осуществляется с помощью вычислительной техники

1.2 Состав ИС
В состав ИС входит комплекс средств автоматизации или программнотехническая часть (КСА)



1.3 Классификация ИС
ИС можно классифицировать по следующим критериям:
1. По сложности создания и сопровождения.
2. По концептуальной модели использования (целевое назначение системы).
3. По характеру представления и логической организации хранимой
информации (как организована база данных).
4. По способу реализации БД (как реализована база данных).
Сложность создания и сопровождения. Специфика решаемых ИС задач,
сложность их создания, сопровождения и время жизни ИС позволяют разделить их на три класса.
1. Малые.
2. Средние.
3. Крупные – корпоративные ИС (КИС).
Основные признаки малых ИС: короткий жизненный цикл, ориентация
на массовое использование, невысокая цена, однородность аппаратного и
программного обеспечения, сопровождение разработчиком для модификаций.
8
Для средних ИС характерны: более длительный жизненный цикл, наличие аналитической обработки данных, администрирование штатом сотрудников, наличие средств обеспечения безопасности.


Лекция 2 Жизненный цикл информационных систем
Жизненный цикл информационных систем


Жизненный цикл автоматизированной системы – это совокупность
взаимосвязанных процессов создания и последовательного изменения состояния ИС

Лекция 3 Этапы жизненного цикла автоматизированных систем и программного обеспечения
Этапы жизненного цикла автоматизированных систем и программного обеспечения
3.1 Взаимосвязь этапов ЖЦПО и ЖЦ системы

Модель жизненного цикла – структура, состоящая из процессов, работ и
задач, включающих в себя разработку, эксплуатацию, и сопровождение программного продукта, охватывающая жизнь системы от установления требований к ней до прекращения ее использования

Лекция 3 Этапы жизненного цикла автоматизированных систем и программного обеспечения
Этапы жизненного цикла автоматизированных систем и программного обеспечения
3.1 Взаимосвязь этапов ЖЦПО и ЖЦ системы
Этапы ЖЦПО:
1) анализ требований - совмещается с формированиями требований, разработкой концепции АС и техническим заданием (1, 2, 3);
2) проектирование - совмещается с ЭП, ТП (4, 5);
3) кодирование (программирование) и тестирование - совмещается с РД
(6);
4) внедрение - совмещается с вводом в действие (7);
5) сопровождение - совмещается с сопровождением (8)

3.2 Назначение этапов ЖЦ
Стратегия – это детальное обследование условий проектирования и
задач системы. Основная цель – оценка реального объема проектирования,
целей и задач проекта. 

Этап «Кодирование» заключается в написании программных кодов по
спецификациям программных модулей.
Этап «Тестирование» заключается в проверке и отладке функционирования системы.



функциональное тестирование – базовое тестирование, состоит в проверке (контроле) функциональности операций на единственном экземпляре приложения архитектуры клиент/сервера;
- конфигурационное тестирование – тестирование приложения, которое
охватывает клиентскую и серверную части приложения во всех комбинациях между платформами клиента и сервера;
- конкурентное тестирование – тестирование двух и более клиентов, использующих один сервер. Это тестирование – разновидность функционального, когда проверяется способность сервера одновременно обслуживать двух и более клиентов.
- стрессовое тестирование – тестирование на большом числе транзакций и позволяет обнаружить ошибки в исходной реализации в динамике, выполняя одну или множество команд продолжительное время;
- тестирование загрузки – тестирование для верифицирования при работе большого числа конкурирующих клиентов и предназначено для обнаружения взаимных блокировок и проблем с очередями;
- тестирование эффективности спроектированной системы – тестирование для получения количественных характеристик системы с учетом
реального окружения системы (например, 500 пользователей на один
сервер базы данных);
- регрессионное тестирование – тестирование степени независимости и
сохранения работоспособности той части системы, которая не подверглась модификации.



Лекция 5 Этап «Анализ»
Этап «Анализ»
5.1 Основные принципы и методы структурного анализа
Фаза анализа – основополагающая. Ошибки этой фазы имеют самые
тяжелые последствия.
Модель предметной области – это представление понятий, выраженных в терминах предметной области задачи
Анализ это очень широкое понятие, которое в свою очередь можно поделить на две разновидности:
1) структурный системный анализ;
2) объектно-ориентированный анализ.
Структурный анализ – это исследование системы, которое начинается
с ее общего обзора и затем детализируется, приобретая иерархическую
структуру со все большим числом уровней. Структурный подход не обеспечивает возможность создания предельно сложных систем (неэффективен в
объектно-ориентированных языках программирования (ООЯП))
Объектно-ориентированный анализ основан на объектах и их взаимодействии между собой. Достоинство – объектно-ориентированные системы
более гибкие и лучше развиваются.
Одновременно двумя способами проектировать систему нельзя.
Для проведения структурного анализа принято использовать методологии, базирующиеся на наборе основополагающих методов, так называемых
структурных.
Методология – это совокупность методов, применяемых в ЖЦ системы.
Методология включает руководящие указания для оценки и выбора проекта,
определяет шаги работы и последовательность применения методов для достижения поставленной цели.
Метод – это последовательный процесс создания моделей, которые
описывают вполне определенными средствами различные стороны разрабатываемой программной системы.

5.2 Методологии структурного анализа и проектирования

1. По отношению к школам - Software Engineering (SE) и Information
Engineering (IE).
2. По порядку построения модели - процедурно-ориентированные, ориентированные на данные, информационно-ориентированные.
3. По типу целевых систем - для систем реального времени (СРВ) и для
информационных систем (ИС).

Лекция 6 Функциональные модели
Функциональные модели

Методология SADT – это совокупность методов, правил и процедур,
предназначенных для функционального моделирования предметной области.
Активностная модель – это совокупность диаграмм, текста и глоссария. Диаграммы – главные компоненты модели.


Процесс - преобразование входных потоков данных в выходные в соответствии с действием, задаваемым именем процесса.
Накопитель данных может быть реализован физически в виде микрофиши, ящика в картотеке, таблицы в оперативной памяти, файла на магнитном носителе.
Накопитель данных идентифицируется буквой «D» или «БД» и произвольным числом. Имя накопителя должно отображать его содержание. Имя
хранилища - имя существительное.
Накопитель данных в общем случае является прообразом будущей базы
данных и описание хранящихся в нем данных должно быть увязано с информационной моделью.
Поток данных определяет информацию, передаваемую через некоторое
соединение от источника к приемнику. Реальный поток данных может быть
информацией, передаваемой по кабелю между двумя устройствами, пересылаемыми по почте письмами, магнитными лентами или дискетами, переносимыми с одного компьютера на другой.
Поток данных на диаграмме изображается стрелкой, которая показывает направление потока. Каждый поток данных имеет имя, отражающее его
содержание.

Лекция 7 Функциональные модели
Функциональные модели

7.2 Словарь данных
Недостатком диаграмм данных является то, что они не всегда показывают, какая информация преобразуется процессами и как она изменяется. Задача описания информации, преобразуемой процессами, реализуется в словаре данных.
Словарь данных – это определенным образом организованный список
всех элементов данных системы с их точными определениями. Это дает всем
проектировщикам возможность иметь представление о входных и выходных
потоках и хранилищах данных.
Словарь данных - «метабаза», в которой хранится информация о базе
данных системы. Его основная задача – документирование данных, а также
37
однозначное толкование элементов данных, управление данными на всех
этапах разработки и эффективное взаимодействие между разработчиками.

Методы задания спецификация процессов
Если нет необходимости в дальнейшей детализации процесса с помощью DFD, то используют спецификацию процесса. Спецификация процесса –
это алгоритм описания задачи, выполняемой процессом. Множество всех СП
представляет собой спецификацию системы.
Классификация методов задания СП
1. Текстовое описание.
2. Структурированный естественный язык.
3. Таблица решений.
4. Дерево решений.
5. Визуальный язык.
6. Язык программирования


Лекция 10 Структурное проектирование
Структурное проектирование

Структурные карты - инструмент для демонстрации структуры системы и составляющих ее программных модулей, а также их связей друг с
другом.



Лекция 11 Характеристики модели реализации
Характеристики модели реализации

1. Чтобы модули были как можно более независимы (критерий сцепления - coupling).
2. Чтобы каждый модуль выполнял единственную (связанную с общей
задачей) функцию (критерий связности - cohesion).

Лекция 12 Понятие бизнес-процесса
Понятие бизнес-процесса
12.1 Понятие бизнес-процесса

Для каждого бизнес-процесса дается ответ на вопросы:
1. Что в него поступает на входе?
2. Результат работы бизнес-процесса?
55
3. Чем он руководствуется?
4. Кто его выполняет?
5. Какие функции выполняются в рамках бизнес-процесса.


Лекция 14 Технология внедрения CASE-средств
Технология внедрения CASE-средств


14.1 Определение потребностей в CASE-средствах

Анализ возможностей организации в отношении ее технологической
базы, персонала и используемого ПО, как правило, может быть формальным
и неформальным. Формальный – через модели зрелости технологических
процессов предприятия CММ и согласно стандартам ИСО 9000


Лекция 15 Оценка качества разработанной программной продукции
Оценка качества разработанной программной продукции
15.1 Качество ПО и его характеристики


Качество ПО – это весь объем признаков и характеристик программной
продукции, который относится к их способности удовлетворять установленным или предполагаемым потребностям пользователя.
Качество оценивается с помощью критериев оценки качества ПО.
Критерий оценки качества ПО – это набор определенных и задокументированных правил и условий, которые используются для принятия решения
о приемлемости общего качества конкретной программной продукции

Комплексные показатели:
- понятность;
- обучаемость;
- привлекательность;
- простота использования.

Комплексные показатели:
- анализируемость;
- изменяемость;
- устойчивость;
- тестируемость.



15.2 Модель процесса оценивания качества

Примеры метрик:

- полнота реализации функций. Используется для измерения пригодности;
- корректность реализации функций. Используется для измерения пригодности;
- отношение числа обнаруженных дефектов к прогнозируемому. Используется для определения зрелости;
- отношение числа проведенных тестов к общему их числу. Используется
для определения зрелости;
- отношение числа доступных проектных документов к указанному в их
списке. Используется для измерения анализируемости.


Лекция 16 Объектно-ориентированный подход к разработке программного обеспечения
Объектно-ориентированный подход к разработке программного обеспечения

16.1 Возникновение объектно-ориентированного подхода

ООП – это альтернатива алгоритмической декомпозиции, которая не
делит задачу на последовательность шагов – как ее решить, а представляет
задачу в виде взаимодействия объектов, принимающих в ней участие и взятых из словаря предметной области. Каждый объект обеспечивает некоторое
поведение, мы можем его попросить что-то сделать. Объект – моделирует
предмет из реального мира.
Объектно-ориентированный метод разработки ПО произошел на основе
развития всех предыдущих методов и вылился в создании объектноориентированных языков программирования, которые представляют собой не
более чем инструмент для написания объектно-ориентированных программ.
Наиболее распространены среди них:
- C++;
- Java;
- Смолтолк (Smalltalk).

Инкапсуляция – это обеспечиваемое объектами сокрытие информации.
Те операции, которые может выполнять объект, – это его интерфейс.
Интерфейс – описание того, как объект взаимодействует с окружающим миром.


Лекция 17 Классы
Классы
17.1 Понятие класса
В любой системе, как правило, функционирует достаточно большое количество объектов, многие из которых похожи друг на друга – однотипны.
Однотипные объекты объединяются в классы.
Класс – это шаблон создания объектов.
Все объекты одного и того же класса обладают одинаковым интерфейсом и реализуют его одинаково. Их отличие может быть только в текущем
состоянии. Индивидуальные объекты – это экземпляры класса.
Экземпляр – это объект, принадлежащий некоторому классу.

Наследование – это отношение между классами, при котором один
класс разделяет структуру или поведение одного или нескольких других
классов. Существующий класс называется при этом суперклассом, а производный подклассом или производным классом.
Механизм наследования позволяет выделить общие части классов. Каким образом проводить наследование и создавать иерархию классов, какие
классы выделять, решает сам разработчик.
Иерархия классов – это описание отношений наследования между классами.
Некоторые классы, которые просто объединяют общие характеристики
других классов, но по которым невозможно создать объекты, называются абстрактными.

17.2 Виды отношений между классами
Существуют следующие основные отношения между классами:
1) ассоциация;
2) наследование;
3) использование;
4) агрегация.
Ассоциация – двухсторонняя связь между объектами разных классов.
Например, имеется объект преподаватель и объект студент

Основные виды диаграмм
19.1 Диаграмма прецедентов USE-CASE диаграмма
Концептуальная модель выражается в виде диаграммы прецедентов
(вариантов использования). Для составления вариантов использования прецедентов рекомендуется рассмотреть все внешние по отношению к системе
события, на которые система должна реагировать. Существуют различные
форматы описания прецедентов. В любом случае это - некоторый повествовательный документ о поведении системы. В этом документе должны быть
отражены такие моменты, как:
- основные исполнители, заинтересованные лица и их требования;
- результаты работы системы;
- основной процесс в системе (успешный);
- альтернативы – отклонения от основного процесса;
- специальные требования;
- список технологий и типов данных.


Лекция 20 Архитектура информационных систем
Архитектура информационных систем
20.1 Многократное использование программных систем


На сервере могут запускаться также триггеры и хранимые процедуры.
Триггер – программа, которая позволяет поддерживать целостность таблиц
базы данных.
